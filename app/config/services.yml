# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:

services:
    dynamicDomainSessionStorage:
        class: Domain\SiteBundle\Utils\DynamicDomainSessionStorage

    app.aws.credentials:
        class:      Aws\Credentials\Credentials
        arguments:
            - "%amazon_aws_key%"
            - "%amazon_aws_secret_key%"

    app.cloudwatch_logs.client:
        class:      Aws\CloudWatchLogs\CloudWatchLogsClient
        arguments:
            - {version: "latest", credentials: "@app.aws.credentials", region: "%amazon_aws_region%"}

    app.monolog.handler.cloudwatch:
        class:      Maxbanton\Cwh\Handler\CloudWatch
        arguments:
            - "@app.cloudwatch_logs.client"
            - "%aws_sdk_cloudwatch_group%"
            - "%aws_sdk_cloudwatch_stream%"
            - "%aws_sdk_cloudwatch_retention%"
            - "%aws_sdk_cloudwatch_batch_size%"
            - { dev-tag: "dev-tag" }
            - "%aws_sdk_cloudwatch_level%"
    memcached:
        class: Cache\AdapterBundle\ProviderHelper\Memcached
        arguments:
            persistent_id: "%memcached.session_prefix%"
        calls:
            - [ addServer, [ "%memcached.host%", "%memcached.port%" ]]
    app.cache.memcached:
        class: Doctrine\Common\Cache\MemcachedCache
        calls:
            - [ setMemcached, ['@memcached'] ]
    session.handler.memcached:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler
        arguments: ["@memcached", { prefix: "%memcached.session_prefix%", expiretime: "%memcached.session_expire%" }]
    validator.mapping.cache.memcached:
        class: Symfony\Component\Validator\Mapping\Cache\DoctrineCache
        arguments: ['@app.cache.memcached']