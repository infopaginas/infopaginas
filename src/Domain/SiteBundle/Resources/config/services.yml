services:
    #services section:
    domain_site.mailer:
        class: Domain\SiteBundle\Mailer\Mailer
        arguments: ['@mailer', '@oxa_config', '@router']
        calls:
            - [ setTemplateEngine, [ '@templating' ]]

    #form types section
    domain_site.registration.form.type:
        class: Domain\SiteBundle\Form\Type\RegistrationType
        arguments: [null]
        tags:
        - { name: form.type, alias: domain_site_registration }

    domain_site.reset_password_request.form.type:
        class: Domain\SiteBundle\Form\Type\ResetPasswordRequestType
        arguments: [null]
        tags:
        - { name: form.type, alias: domain_site_reset_password_request }

    domain_site.reset_password.form.type:
        class: Domain\SiteBundle\Form\Type\ResetPasswordType
        arguments: [null]
        tags:
        - { name: form.type, alias: domain_site_reset_password }

    domain_site.user_profile.form.type:
        class: Domain\SiteBundle\Form\Type\UserProfileType
        arguments: [null]
        tags:
        - { name: form.type, alias: domain_site_user_profile }

    domain_site.user_password_update.form.type:
        class: Domain\SiteBundle\Form\Type\PasswordUpdateType
        arguments: [null]
        tags:
        - { name: form.type, alias: domain_site_user_password_update }

    #forms section
    domain_site.registration.form:
        factory: ['@form.factory', 'createNamed']
        class: Symfony\Component\Form\Form
        arguments: [domain_site_registration, domain_site_registration]

    domain_site.reset_password_request.form:
        factory: ['@form.factory', 'createNamed']
        class: Symfony\Component\Form\Form
        arguments: [domain_site_reset_password_request, domain_site_reset_password_request]

    domain_site.reset_password.form:
        factory: ['@form.factory', 'createNamed']
        class: Symfony\Component\Form\Form
        arguments: [domain_site_reset_password, domain_site_reset_password]

    domain_site.user_profile.form:
        factory: ['@form.factory', 'createNamed']
        class: Symfony\Component\Form\Form
        arguments: [domain_site_user_profile, domain_site_user_profile]

    domain_site.user_password_update.form:
        factory: ['@form.factory', 'createNamed']
        class: Symfony\Component\Form\Form
        arguments: [domain_site_user_password_update, domain_site_user_password_update]

    #form handlers section
    domain_site.registration.form.handler:
        class: Domain\SiteBundle\Form\Handler\RegistrationFormHandler
        scope: request
        arguments:
            - '@domain_site.registration.form'
            - '@request'
            - '@fos_user.user_manager'
            - '@oxa.manager.groups'
            - '@domain_site.mailer'

    domain_site.reset_password_request.form.handler:
        class: Domain\SiteBundle\Form\Handler\ResetPasswordRequestFormHandler
        scope: request
        arguments:
            - '@domain_site.reset_password_request.form'
            - '@request'
            - '@fos_user.user_manager'
            - '@fos_user.util.token_generator'
            - '@domain_site.mailer'
            - '@translator.default'

    domain_site.reset_password.form.handler:
        class: Domain\SiteBundle\Form\Handler\ResetPasswordFormHandler
        scope: request
        arguments:
            - '@domain_site.reset_password.form'
            - '@request'
            - '@fos_user.user_manager'
            - '@translator.default'

    domain_site.user_profile.form.handler:
        class: Domain\SiteBundle\Form\Handler\UserProfileFormHandler
        scope: request
        arguments:
            - '@domain_site.user_profile.form'
            - '@request'
            - '@fos_user.user_manager'
            - '@security.token_storage'

    domain_site.user_password_update.form.handler:
        class: Domain\SiteBundle\Form\Handler\PasswordUpdateFormHandler
        scope: request
        arguments:
            - '@domain_site.user_password_update.form'
            - '@request'
            - '@fos_user.user_manager'
            - '@security.token_storage'

    domain_site.contains_email:
        class: Domain\SiteBundle\Validator\Constraints\ContainsEmailExpandedValidator
        arguments:
            - '@translator'
            - '@validator'
        tags:
            - { name: validator.constraint_validator }

    domain_site.constraint_email_unique:
        class: Domain\SiteBundle\Validator\Constraints\ConstraintEmailUniqueValidator
        arguments:
            - '@translator'
            - '@doctrine.orm.default_entity_manager'
            - '@oxa.manager.users'
        tags:
            - { name: validator.constraint_validator }

    domain_site.constraint_url:
        class: Domain\SiteBundle\Validator\Constraints\ConstraintUrlExpandedValidator
        arguments:
            - '@translator'
        tags:
            - { name: validator.constraint_validator }

    listener.subdomain_request:
        class: Domain\SiteBundle\EventListener\SubDomainListener
        arguments: [ '@service_container', '@router', '@twig' ]
        tags:
            - { name: kernel.event_subscriber }

    listener.exception_listener:
        class: Domain\SiteBundle\EventListener\ExceptionListener
        arguments: [ '@domain_site.mailer', '@logger' ]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    sitemap.dynamic_urls_subscriber:
        class: Domain\SiteBundle\EventListener\SitemapSubscriber
        arguments:
            - "@service_container"
        tags:
            - { name: "kernel.event_subscriber", priority: 100 }

    domain_site.cron.logger:
        class:  Domain\SiteBundle\Logger\CronLogger
        arguments:
            - "@mongodb.manager"

    monolog.logger.elasticsearch:
        tags:
            - { name: monolog.logger, channel: elasticsearch }
